package staff;

import lombok.Getter;

@Getter
public enum Shift {
    // 8-Hour Shifts - Assuming typical start times
    DAY_8H("Day 8 Hours", 8.0, false, 7.0),      // Example: 7 AM start
    EVENING_8H("Evening 8 Hours", 8.0, false, 15.0), // Example: 3 PM start
    NIGHT_8H("Night 8 Hours", 8.0, false, 23.0),   // Example: 11 PM start

    // 10-Hour Shifts
    DAY_10H("Day 10 Hours", 10.0, false, 7.0),     // Example: 7 AM start
    EVENING_10H("Evening 10 Hours", 10.0, false, 13.0),// Example: 1 PM start (less common, adjust)
    NIGHT_10H("Night 10 Hours", 10.0, false, 21.0),  // Example: 9 PM start

    // 12-Hour Shifts
    DAY_12H("Day 12 Hours", 12.0, false, 7.0),     // Example: 7 AM start (Corresponds to LP's 'long day' (Dl))
    NIGHT_12H("Night 12 Hours", 12.0, false, 19.0),   // Example: 7 PM start (Corresponds to LP's 'long night' (Nl))

    // Special Shifts
    ON_CALL("On Call", 0.0, false, 0.0), // Start time might be less relevant or variable, using 0.0 as placeholder
    FREE("Free/Off", 0.0, true, 0.0);    // Start time irrelevant, using 0.0

    private final String description;
    private final double lengthInHours;
    private final boolean isOffShift;
    private final double defaultStartTimeInHoursFromMidnight; // New field

    Shift(String description, double lengthInHours, boolean isOffShift, double defaultStartTimeInHoursFromMidnight) {
        this.description = description;
        this.lengthInHours = lengthInHours;
        this.isOffShift = isOffShift;
        this.defaultStartTimeInHoursFromMidnight = defaultStartTimeInHoursFromMidnight;

        // Corrected validation for start time in enum constructor
        // Apply strict start time validation only to shifts that are actual work shifts (not off and have a duration > 0)
        if (!this.isOffShift && this.lengthInHours > 0) {
            if (defaultStartTimeInHoursFromMidnight < 0 || defaultStartTimeInHoursFromMidnight >= 24) {
                throw new IllegalArgumentException("Default start time in hours for work shift " + this.name() + " must be between 0.0 and 23.999...");
            }
        } else if (this.isOffShift || this.lengthInHours == 0) {
            // For OFF shifts or zero-length shifts (like ON_CALL), a start time of 0.0 is acceptable as a placeholder
            // and other values might not make sense anyway. We can be less strict or skip validation.
            // If even these need some range, you can add it here. For now, 0.0 is accepted for them.
            if (defaultStartTimeInHoursFromMidnight != 0.0 && (this.isOffShift || this.name().equals("ON_CALL"))) { // Example: if ON_CALL should always be 0.0
                // Potentially log a warning or throw if non-0 start times for FREE/ON_CALL are problematic
                // System.out.println("Warning: Non-zero default start time for " + this.name() + " : " + defaultStartTimeInHoursFromMidnight);
            }
        }
    }

    // Getter for defaultStartTimeInHoursFromMidnight is generated by Lombok's @Getter at class level
}